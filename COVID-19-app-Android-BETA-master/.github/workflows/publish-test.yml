name: Publish Test

on:
  repository_dispatch:
    types: [publish-test]

jobs:

  pull_docker_image:
    runs-on:
      - self-hosted
      - linux
      - aws
    steps:
      - name: Login to Docker
        run: |
          docker login -u "${{secrets.docker_username}}" \
          -p "${{secrets.docker_password}}" \
          "nhsxpivotal.azurecr.io"
      - name: Pull Image
        run: |
          docker pull nhsxpivotal.azurecr.io/sonar-colocate-services-image

  publish:
    needs: pull_docker_image
    runs-on:
      - self-hosted
      - linux
      - aws

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.client_payload.ref }}

      - run: echo ::set-output name=commitsha::$(git rev-parse --short HEAD)

      - name: Cache Gradle packages
        uses: actions/cache@v1
        with:
          path: /root/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Publish
        id: publish
        uses: ./.github/actions/publish-action
        env:
          BUILD_FLAVOR: StagingApk
          PLAY_TRACK: internal
          GOOGLE_SERVICES: ${{ secrets.GoogleServices }}
          PLAY_SERVICES: ${{ secrets.PlayServices }}
          SIGNING_KEY_STORE: ${{ secrets.signingKeyStore}}
          SIGNING_KEY_ALIAS: ${{ secrets.signingKeyStoreAlias}}
          SIGNING_KEY_STORE_PASSWORD: ${{ secrets.signingKeyStorePassword}}
          SIGNING_KEY_PASSWORD: ${{ secrets.signingKeyPassword}}
          SONAR_HEADER_VALUE: ${{ secrets.TestSonarHeaderValue }}
          SONAR_ANALYTICS_KEY: ${{ secrets.TestSonarAnalyticsKey }}
          SONAR_BASE_URL: ${{ secrets.TestSonarBaseUrl }}
          COMMIT_SHA: ${{ github.event.client_payload.ref }}

      - name: Create Test Release
        id: create_test_release
        uses: fleskesvor/create-release@feature/support-target-commitish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.publish.outputs.buildVersion }}
          release_name: Test Build ${{ steps.publish.outputs.buildVersion }}
          body: |
            New test build

      - name: Upload Test APK
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_test_release.outputs.upload_url }}
          asset_path: app/build/outputs/apk/staging/app-staging.apk
          asset_name: app-staging.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Notify Slack
        uses: rtCamp/action-slack-notify@v2.0.0
        env:
          SLACK_WEBHOOK: ${{ secrets.SonarAndroidWebHook }}
          SLACK_COLOR: '#138275'
          SLACK_USERNAME: CI
          SLACK_TITLE: New Test Release
          SLACK_MESSAGE: ${{ steps.create_test_release.outputs.html_url }}
